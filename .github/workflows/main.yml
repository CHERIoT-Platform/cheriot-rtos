name: CHERIoT RTOS Tests

# The following should ensure that the workflow only runs a single set of actions
# for each PR. But it will not apply this to pushes to the main branch.
#
# Shamelessly stolen from https://github.com/microsoft/snmalloc/pull/760 with
# the addition of ${{ github.workflow }} to the group name; for details, see
# https://docs.github.com/en/enterprise-cloud@latest/actions/writing-workflows/choosing-what-your-workflow-does/control-the-concurrency-of-workflows-and-jobs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  merge_group:
  workflow_dispatch:
    inputs:
      devcontainer:
        description: 'Set to override default build container'
        type: string
        required: false

jobs:
  run-tests:
    strategy:
      matrix:
        build-type: [ debug, release ]
        board: [ sail, ibex-safe-simulator ]
        include:
          - sonata: false
          - build-type: debug
            build-flags: --debug-loader=y --debug-scheduler=y --debug-allocator=information --allocator-rendering=y -m debug
          - build-type: release
            build-flags: --debug-loader=n --debug-scheduler=n --debug-allocator=none -m release --stack-usage-check-allocator=y --stack-usage-check-scheduler=y
          - board: sonata-simulator
            build-type: release
            build-flags: --debug-loader=n --debug-scheduler=n --debug-allocator=none -m release --stack-usage-check-allocator=y --stack-usage-check-scheduler=y
            sonata: true
      fail-fast: false
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.devcontainer || 'ghcr.io/cheriot-platform/devcontainer:latest' }}
      options: --user 1001
    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Build tests
      run: |
        cd tests
        xmake f --board=${{ matrix.board }} --sdk=/cheriot-tools/ ${{ matrix.build-flags }}
        xmake
    - name: Run tests
      run: |
        cd tests
        xmake run
    - name: Build examples
      run: |
        set -e
        for example_dir in $PWD/examples/*/; do
          cd $example_dir
          echo Building $example_dir
          xmake f --board=${{ matrix.board }} --sdk=/cheriot-tools/ ${{ matrix.build-flags }}
          xmake
        done
    - name: Run examples
      run: |
        set -e
        for example_dir in $PWD/examples/*/; do
          cd $example_dir
          echo Running $example_dir
          xmake run
        done
    - name: Build benchmarks
      run: |
        set -e
        for example_dir in $PWD/benchmarks/*/; do
          cd $example_dir
          echo Building $example_dir
          xmake f --board=${{ matrix.board }} --sdk=/cheriot-tools/ ${{ matrix.build-flags }}
          xmake
        done

  sonata-sram-hello:
    name: Check Sonata SRAM-only Hello World
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cheriot-platform/devcontainer:latest
      options: --user 1001
    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Build and run hello world
      run: |
        set -e
        cd $PWD/examples/03.hello_safe_compartment/
        xmake f --board=sonata-simulator --sdk=/cheriot-tools/ --board-mixins=sonata-1.x-sram-mixin
        xmake
        env SONATA_SIMULATOR_BOOT_STUB=/cheriot-tools/elf/sonata_simulator_sram_boot_stub xmake run

  check-format:
    name: Check coding conventions
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cheriot-platform/devcontainer:latest
      options: --user 1001
    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Generate compiler_commands.json files
      run: ./scripts/generate_compile_commands.sh
    - name: Run clang-format and clang-tidy
      run: ./scripts/run_clang_tidy_format.sh /cheriot-tools/bin

  all-checks:
    needs: [run-tests, check-format]
    runs-on: ubuntu-latest
    steps:
    - name: Dummy step
      run: true
